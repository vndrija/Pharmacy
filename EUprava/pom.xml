<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Inherit defaults from Spring Boot -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.5.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	
	<groupId>com.ftn</groupId>
	<artifactId>EUprava</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<!-- lookup parent from repository -->
	<!-- jar je predefinisana vrednost, ako se želi postavit war vrednost
		onda je neophodno i osigurati da konfiguracija za 
		embedovani servlet kontejner ne utiče na konfiguraciju 
		servlet kontejnerom u kojem bi se postavila war arhiva.
		Potrebno je označiti embedovani servlet kontejner kao provided (vidi dole) 
	 -->
	<packaging>jar</packaging>
 	
	<name>EUprava Maven Webapp</name>
	<url>http://www.example.com</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.8</java.version>
		<!-- zamena za java version -->
		<!--  
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		-->
	</properties>

	<dependencies>
		<!-- Add typical dependencies for a web application -->
		<!-- uključivanje Spring Web modula -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		
		<!-- Add dependencies for tomcat container -->
		<!-- Omogućuje da se Tomcat veb kontejner ugradi u izvršnu verziju aplikacije. 
			Tomcat je predefinisani veb kontejner za Spring Boot verziju 2.2.5.RELEASE.
			Može se koristiti i Jetty veb kontejner sa spring-boot-starter-jetty, ili
			Undertow sa spring-boot-starter-undertow.
			-->
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<!-- Add dependencies for using Spring Session -->
		<!-- Provides session repository for relational database like MYSQL etc session management -->
		<!-- 
		<dependency>
			<groupId>org.springframework.session</groupId>
			<artifactId>spring-session-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.session</groupId>
			<artifactId>spring-session-jdbc</artifactId>
		</dependency>
		 -->
		 
		<!-- Add dependencies for testing -->
		<!-- pribavljanje test okruženja, artifact će ujedno prevući i JUnit biblioteku -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Add thymeleaf dependencies-->
		<!-- uključivanje Thymeleaf biblioteka -->
		<!-- Thymeleaf je Java XML/XHTML/HTML5 templejt endžin koji se koristi za veb (servlet-based) i ne-veb oruženja -->  
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>


		<dependency>
   		 	<groupId>org.jsoup</groupId>
   		 	<artifactId>jsoup</artifactId>
    		<version>1.14.2</version>
		</dependency>
		<!-- Add spring-boot-devtools -->
		<!-- modul je poželjno koristiti tokom samog razvoja veb aplikacija jer omogućuje 
				dodatne pogodnosti kao što su automatski restart, 
				ne bi li razvoj aplikacije išao što lakše.
				Više o modulu na https://www.baeldung.com/spring-boot-devtools -->
		<!-- spring-boot-devtools provides ability to quickly setup and run services -->
		<!-- it enables Property defaults, Automatic Restart, Live Reload, Global Settings, Remote Applications -->
		<!-- Property defaults: for e.g. disabling caching of Thymeleaf templates spring.thymeleaf.cache=false,
				reason: during development, it's more important to see the changes as quickly as possible 
		 		-->
		<!-- Automatic Restart: when changes are made, developer needs to manually build the project 
				and deploy/start the application for new changes to take effect.
				spring-boot-devtools automates this process, whenever files change in the classpath, 
				applications using spring-boot-devtools will cause the application to restart
				-->
		<!-- Live Reload: embedded LiveReload server that is used to trigger 
				a browser refresh when a resource is changed. 
				Install of LiveReload plugin for Browser is needed
				https://chrome.google.com/webstore/detail/remotelivereload/jlppknnillhjgiengoigajegdpieppei?hl=en-GB.
				-->
		<!-- Global Settings: configure global settings that are not coupled with any application.
				use file spring-boot-devtools.properties located at $HOME
				-->
		<!-- Remote Applications: Remote Debugging via HTTP (Remote Debug Tunnel)
				-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- DB related dependencies -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<!--  <scope>runtime</scope> -->
		</dependency>
		<dependency>
		   <groupId>org.springframework.boot</groupId>
		   <artifactId>spring-boot-starter-jdbc</artifactId>
		</dependency>
		
		<!-- webjar bootstrap and jquery dependencies -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>3.3.7</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>3.2.1</version>
        </dependency>
        <dependency>
        	<groupId>org.webjars</groupId>
        	<artifactId>jquery-ui</artifactId>
        	<version>1.12.1</version>
    	</dependency> 

	</dependencies>

	<build>
			<finalName>EUprava</finalName>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
        				<mainClass>com.ftn.EUprava.EUpravaApplication</mainClass>
    					<excludeDevtools>false</excludeDevtools>
    				</configuration>	
				</plugin>
			</plugins>
	</build>
</project>
